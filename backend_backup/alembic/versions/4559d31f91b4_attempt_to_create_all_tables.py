"""attempt_to_create_all_tables

Revision ID: 4559d31f91b4
Revises: 
Create Date: 2025-05-17 19:13:24.755131

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4559d31f91b4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('stories',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('system_prompt', sa.Text(), nullable=True, comment='LLM이 전체 스토리 흐름을 참고할 수 있는 초기 시스템 프롬프트'),
    sa.Column('initial_stats', sa.JSON(), nullable=True, comment="게임 시작 시 초기 스탯 정의 (예: {'평판': 50, '재정': 100})"),
    sa.Column('start_node_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['start_node_id'], ['nodes.id'], name='fk_story_start_node_id', ondelete='SET NULL', use_alter=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stories_id'), 'stories', ['id'], unique=False)
    op.create_index(op.f('ix_stories_title'), 'stories', ['title'], unique=False)
    op.create_table('nodes',
    sa.Column('title', sa.String(length=255), nullable=True, comment='에디터에서 노드를 쉽게 식별하기 위한 제목'),
    sa.Column('node_type', sa.Enum('STORY', 'QUESTION', 'AI_STORY', name='nodetype'), nullable=False),
    sa.Column('text_content', sa.Text(), nullable=True, comment='노드의 서술 텍스트 또는 질문 내용'),
    sa.Column('choices', sa.JSON(), nullable=True, comment='선택지 정보. 예: [{"text": "왼쪽으로 간다", "next_node_id": 2, "stat_effects": {"용기": 10}}]'),
    sa.Column('llm_prompt_for_next_node_generation', sa.Text(), nullable=True, comment='이 노드 이후 LLM이 다음 노드를 생성해야 할 경우, 그 생성을 위한 프롬프트'),
    sa.Column('story_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_table('stats',
    sa.Column('name', sa.String(length=100), nullable=False, comment="스탯의 이름 (예: '평판', '재정')"),
    sa.Column('description', sa.Text(), nullable=True, comment='스탯에 대한 설명'),
    sa.Column('initial_value', sa.Integer(), nullable=False, comment='해당 스탯의 기본 시작 값'),
    sa.Column('min_value', sa.Integer(), nullable=True),
    sa.Column('max_value', sa.Integer(), nullable=True),
    sa.Column('story_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stats_id'), 'stats', ['id'], unique=False)
    op.create_table('prompts',
    sa.Column('prompt_text', sa.Text(), nullable=False, comment='LLM에게 전달될 실제 프롬프트 내용'),
    sa.Column('prompt_type', sa.Enum('NODE_GENERATION', 'ROUTING', 'STAT_ADJUSTMENT', name='prompttype'), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prompts_id'), 'prompts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_prompts_id'), table_name='prompts')
    op.drop_table('prompts')
    op.drop_index(op.f('ix_stats_id'), table_name='stats')
    op.drop_table('stats')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.drop_table('nodes')
    op.drop_index(op.f('ix_stories_title'), table_name='stories')
    op.drop_index(op.f('ix_stories_id'), table_name='stories')
    op.drop_table('stories')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
